
services:
  mms_app:
    image: "mic/mms_app:2.0.0"
    container_name: 'streamlit${NO}'
    privileged: true
    build:
      context: .  
    volumes:
      - ./telegraf.conf:/app/telegraf.conf
      - ./config.ini:/app/config.ini
      - /var/run/docker.sock:/var/run/docker.sock
      - ./.env:/app/.env
    ports:
      - '${ST_PORT}:8501'
    env_file:
      - .env

  mms_data:
    image: "mic/mms_data:2.0.0"
    container_name: 'mms_data${NO}'
    privileged: true
    build:
      context: .
      dockerfile: Dockerfile-data
    volumes:
      - ./.env:/app/.env
    env_file:
      - .env
    
  mms_status:
    image: "mic/mms_status:2.0.0"
    container_name: 'mms_status${NO}'
    privileged: true
    build:
      context: .
      dockerfile: Dockerfile-status
    volumes:
      - ./.env:/app/.env
    env_file:
      - .env

  mms_alarm:
    image: "mic/mms_alarm:2.0.0"
    container_name: 'mms_alarm${NO}'
    privileged: true
    build:
      context: .
      dockerfile: Dockerfile-alarm
    volumes:
      - ./.env:/app/.env
    env_file:
      - .env

  auto_drop:
    container_name: 'auto_drop${NO}'
    privileged: true
    build:
      context: .
      dockerfile: Dockerfile-autodrop
    volumes:
      - ./.env:/app/.env
    env_file:
      - .env

  telegraf_mms:
    image: telegraf
    privileged: true
    container_name: 'telegraf_mms${NO}'
    restart: always
    volumes:
      - ./telegraf.conf:/etc/telegraf/telegraf.conf:ro
    ports:
      - '${TG_PORT}:8125'
    env_file:
      - .env

  influxdb_mms:
    image: influxdb:1.8-alpine
    container_name: 'influxdb_mms${NO}'
    restart: always
    environment:
      - INFLUXDB_DB=influx
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=admin
    env_file:
      - .env
    ports:
      - '${INFLUX_PORT}:8086'
    volumes:
      - /home/influxdb_data:/var/lib/influxdb

  ofelia:
    image: mcuadros/ofelia:latest
    privileged: true
    container_name: 'ofelia${NO}'
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./config.ini:/etc/ofelia/config.ini
    env_file:
      - .env

volumes:
  influxdb_data:
    driver_opts:
      type: none
      device: '/home/influxdb_data${NO}'
      o: bind
